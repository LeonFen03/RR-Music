{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jamie\\\\Downloads\\\\RR-Music-Library\\\\src\\\\components\\\\AlbumView.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumView = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [albumData, setAlbumData] = useState([]);\n  useEffect(() => {\n    const API_URL = `http://localhost:4000/song/${id}`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setAlbumData(resData.results);\n    };\n\n    fetchData();\n  }, [id]);\n\n  const navButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          history.push('/');\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          history.goBack();\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  const allSongs = albumData.filter(entity => entity.kind === 'song').map((album, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: album.trackName\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [albumData.length > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: albumData[0].collectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 78\n    }, this), navButtons(), allSongs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AlbumView, \"NKe0VHpL35UclvJ2NNi3f0y69iA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AlbumView;\nexport default AlbumView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"sources":["C:/Users/Jamie/Downloads/RR-Music-Library/src/components/AlbumView.js"],"names":["useEffect","useState","useParams","useHistory","Spinner","AlbumView","id","history","albumData","setAlbumData","API_URL","fetchData","response","fetch","resData","json","results","navButtons","push","goBack","allSongs","filter","entity","kind","map","album","i","trackName","length","collectionName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAMK,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAAEK,SAAF,EAAaC,YAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAI,8BAA6BJ,EAAG,EAAjD;;AACA,UAAMK,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;AACA,YAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAN,MAAAA,YAAY,CAACK,OAAO,CAACE,OAAT,CAAZ;AACH,KAJD;;AAKAL,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACL,EAAD,CARM,CAAT;;AAUA,QAAMW,UAAU,GAAG,MAAM;AACrB,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACV,UAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AAAkB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,qBAEI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACX,UAAAA,OAAO,CAACY,MAAR;AAAiB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD;;AASA,QAAMC,QAAQ,GAAGZ,SAAS,CAACa,MAAV,CAAiBC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,MAA3C,EAChBC,GADgB,CACZ,CAACC,KAAD,EAAQC,CAAR,KAAc;AACf,wBACI;AAAA,gBACKD,KAAK,CAACE;AADX,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAPgB,CAAjB;AASA,sBACI;AAAA,eACKlB,SAAS,CAACoB,MAAV,GAAmB,CAAnB,gBAAuB;AAAA,gBAAKpB,SAAS,CAAC,CAAD,CAAT,CAAaqB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAAgE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADrE,EAEKZ,UAAU,EAFf,EAGKG,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxCD;;GAAMf,S;UACaH,S,EACCC,U;;;KAFdE,S;AA0CN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport Spinner from './Spinner'\n\nconst AlbumView = () => {\n    const { id } = useParams()\n    const history = useHistory()\n    const [ albumData, setAlbumData ] = useState([])\n\n    useEffect(() => {\n        const API_URL = `http://localhost:4000/song/${id}`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setAlbumData(resData.results)\n        }\n        fetchData()\n    }, [id])\n\n    const navButtons = () => {\n        return (\n            <div>\n                <button onClick={() => {history.push('/')}}>Home</button> |\n                <button onClick={() => {history.goBack()}}>Back</button>\n            </div>\n        )\n    }\n\n    const allSongs = albumData.filter(entity => entity.kind === 'song')\n    .map((album, i) => {\n        return (\n            <div key={i}>\n                {album.trackName}\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            {albumData.length > 0 ? <h2>{albumData[0].collectionName}</h2> : <Spinner />}\n            {navButtons()}\n            {allSongs}\n        </div>\n    )\n}\n\nexport default AlbumView"]},"metadata":{},"sourceType":"module"}