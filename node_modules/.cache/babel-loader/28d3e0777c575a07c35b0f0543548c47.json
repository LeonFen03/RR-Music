{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jamie\\\\Downloads\\\\RR-Music-Library\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { SearchContext } from '../context/SearchContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  _s();\n\n  let {\n    term,\n    handleSearch\n  } = useContext(SearchContext);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: term,\n      type: \"text\",\n      placeholder: \"Search Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleSearch(e, term.current.value),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SearchBar, \"iQ0rPXM/j6q7Ix5703qof3PqInM=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Jamie/Downloads/RR-Music-Library/src/components/SearchBar.js"],"names":["useContext","SearchContext","SearchBar","props","term","handleSearch","e","current","value"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,MAAI;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAuBL,UAAU,CAACC,aAAD,CAArC;AAEA,sBACQ;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEG,IAAZ;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAGE,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIF,IAAI,CAACG,OAAL,CAAaC,KAAjB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAMH,CATD;;GAAMN,S;;KAAAA,S;AAWN,eAAeA,SAAf","sourcesContent":["import { useContext } from 'react'\nimport { SearchContext } from '../context/SearchContext'\n\nconst SearchBar = (props) => {\n    let {term, handleSearch} = useContext(SearchContext)\n\n    return (\n            <form>\n                <input ref={term} type=\"text\" placeholder=\"Search Here\" />\n                <button onClick={(e) => handleSearch(e, term.current.value)}>Submit</button>\n            </form>\n    )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}